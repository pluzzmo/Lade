!!!
%html
	%head
		%title Lade
		%link{:rel => "stylesheet", :type => "text/css", :href => "/css/main.css"}
		%script{:type => "text/javascript",
				:src => "/js/jquery-2.0.0.min.js"}
		%script{:type => "text/javascript",
				:src => "/js/eventsource.js"}
		:javascript
			$(document).ready(function() {
				// Define our filter expression
				jQuery.expr[':'].Contains = function(a,i,m) {
					return (a.textContent || a.innerText || "").toUpperCase().indexOf(m[3].toUpperCase())>=0;
				};
				
				
				$("#filter-input").focus();

				$("#filter-input").keyup(function (e) {
					if (e.keyCode == 13)
				  		e.preventDefault();
				  	
					updateFilter();
			  	});
			});
			
			function updateFilter() {
				var filter = $("#filter-input").val();
				  	if (filter) {
							$("#ondemand-list li").find("a:not(:Contains(" + filter + "))").parent().hide();
							$("#ondemand-list li").find("a:Contains(" + filter + ")").parent().show();
				  	}
				  	else
				  	{
							$("#ondemand-list").find("li").show();
				  	}
			}
			
			function setProgress(perc) {
				$("#ondemand-progress-bar").css('width', perc);
				$("#ondemand-progress-bar").html(perc+'&nbsp;');
				
				if (perc == '100%')
				{
					setTimeout("$('#ondemand-progress-bar').slideUp();", 3000);
				}
			}
			
			function addListItem(arr) {
				var addLocation = (arr[1].indexOf("/") != 0)
				var href = addLocation ? (location.href+"/"+arr[1]) : arr[1]
				
				var li = "<li><a href='"+href+"'>"+arr[0]+"</a></li>";
				$("#ondemand-list").append(li);
			}
			
			debug = false;
			var es = null;
			
			function closeEventStream() {
				if (!$("#ondemand-status").hasClass("error") && !$("#ondemand-status").hasClass("success"))
				{
					$("#ondemand-status").html("");
					setProgress('100%');
				}
				
				es.close();
			}
			
			function listen(uri) {
				es = new EventSource(uri);
				es.addEventListener('open', function (event) {
					setTimeout("closeEventStream()", 90000);
				});
				es.addEventListener('message', function (e) {
					e = JSON.parse(e.data);
					
					if (debug)
					{
						console.log((new Date()).toLocaleString());
						console.log(e);
					}
					
					if (e.close)
					{
						closeEventStream();
					}
					else
					{
						var object = e;
					
						if (e.data)
						{
							$.each(e.data, function(i, value) {
								addListItem(value);
							});
							
							updateFilter();
							$("#ondemand-result-info").html($("#ondemand-list").children().length+" results");
						}
						else if (e.title || e.message)
						{
							$("#ondemand-status").html(e.title || e.message);
							if (e.message)
								$("#ondemand-status").addClass("success");
						}
						else if (e.error)
						{
							$("#ondemand-status").html(e.error);
							$("#ondemand-status").addClass("error");
							setProgress('0%');
						}
						
						if (e.progress)
						{
							setProgress(e.progress);
						}
					}
				});
				es.addEventListener('error', function (event) {
					console.log("Error");
				});
			}
			
		%script
			listen('#{@stream_uri}');
	%body
		%ul#links
			%li
				%a{:href => "/"}home
			%li
				%a{:href => "/settings"}settings
			%li
				%a{:href => "/history"}history
			%li
				%a.current{:href => "/ondemand"}on demand
			%li
				%a{:href => "https://github.com/inket/Lade/issues"}feedback
				
		._600px
			%h1 on demand #{'for '+@module if @module}
			
			%p#ondemand-hint
				Click any file/release to start download
				%input#filter-input.wide-text-input{:type => "text", :placeholder => "Filter...", :style => "margin-right: 0px;"}

			#ondemand-status Initializing...
			#ondemand-result-info 0 results
			.clear
			#ondemand-progress-bar{:style => 'width: 0%;'}

			%ul#ondemand-list